>>> def xk(c, d):
...     if c == 4:
...         return 6
...     elif d >= 4:
...         return 6 + 7 + c
...     else:
...         return 25
>>> xk(10, 10)
23

>>> xk(10, 6)
23

>>> xk(4, 6)
6

>>> xk(0, 0)
25


>>> def how_big(x):
...     if x > 10:
...         print('huge')
...     elif x > 5:
...         return 'big'
...     elif x > 0:
...         print('small')
...     else:
...         print("nothing")
>>> how_big(7)
big

>>> how_big(12)
huge
None

>>> how_big(1)
small
None

>>> how_big(-1)
nothing
None


>>> n = 3
>>> while n >= 0:
...     n -= 1
...     print(n)
2
1
0
-1


>>> True and 13
13

>>> False or 0
0

>>> not 10
False
>>> not None
True

>>> True and 1 / 0 and False
False                                         """没弄明白这里1/0的意思，是1或者是0，还是1除以0，前者答案是False后者是出错，下一题同理"""

>>> True or 1 / 0 or False
True

>>> True and 0
0

>>> False or 1
1

>>> 1 and 3 and 6 and 10 and 15
15


>>> -1 and 1 > 0
True

>>> 0 or False or 2 or 1 / 0
2


>>> not 0
True

>>> (1 + 1) and 1
1

>>> 1/0 or True
error

>>> (True or False) and False
False



def falling(n, k):
    """Compute the falling factorial of n to depth k.

    >>> falling(6, 3)  # 6 * 5 * 4
    120
    >>> falling(4, 3)  # 4 * 3 * 2
    24
    >>> falling(4, 1)  # 4
    4
    >>> falling(4, 0)
    1
    """
    counter = 1
    output = n
    if k != 0:
        while counter < k:
            output = output*(n - counter)
            counter += 1
    else:
        return 1
    return output


def sum_digits(y):
    """Sum all the digits of y.

    >>> sum_digits(10) # 1 + 0 = 1
    1
    >>> sum_digits(4224) # 4 + 2 + 2 + 4 = 12
    12
    >>> sum_digits(1234567890)
    45
    >>> a = sum_digits(123) # make sure that you are using return rather than print
    >>> a
    6
    """
    counter = 0
    x = 0
    z = y
    while z // (10**counter) != 0:
        x = x + y % 10
        y = y // 10
        counter += 1
    return x



def double_eights(n):
    """Return true if n has two eights in a row.
    >>> double_eights(8)
    False
    >>> double_eights(88)
    True
    >>> double_eights(2882)
    True
    >>> double_eights(880088)
    True
    >>> double_eights(12345)
    False
    >>> double_eights(80808080)
    False
    """
    


>>> def ab(c, d):
...     if c > 5:
...         print(c)
...     elif c > 7:
...         print(d)
...     print('foo')
>>> ab(10, 20)
10
foo



>>> def bake(cake, make):
...     if cake == 0:
...         cake = cake + 1
...         print(cake)
...     if cake == 1:
...         print(make)
...     else:
...         return cake
...     return make
>>> bake(0, 29)
1
29

29

>>> bake(1, "mashed potatoes")
mashed potatoes
'mashed potatoes'


def double_eights(n):
    """Return true if n has two eights in a row.
    >>> double_eights(8)
    False
    >>> double_eights(88)
    True
    >>> double_eights(2882)
    True
    >>> double_eights(880088)
    True
    >>> double_eights(12345)
    False
    >>> double_eights(80808080)
    False
    """





